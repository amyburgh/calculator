@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap');

:root {
    --container-height: 812px;
    --container-width: 375px;

    --white: #FBFBFD;
    --orange: #FF9500;
    --orangeAlt: rgba(255, 149, 0, 0.5);
    --lightGrey: #D4D4D2;
    --grey: #828282;
    --darkGrey: #505050;
    --black: #1C1C1C;

    /* color-mode: light dark; */
    --darkMode: #17181A;
    --lightMode: #F7F8FB;
    --lightBg: #EFE8DE;
    --darkBg: #EFE8DE;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    font-family: 'Poppins', sans-serif;
    width: 100%;
    height: 100vh;
    margin: 0;
    padding: 0;
    transition: background-color .5s;
    overflow: hidden;
}

body.light-mode {
    background-color: var(--lightMode);
}

body.dark-mode {
    background-color: var(--darkMode);
}

/* sized for iphoneX */
.container {
    position: absolute;
    width: var(--container-width);
    height: var(--container-height);
    top: calc(50% - (var(--container-height) / 2));
    left: calc(50% - (var(--container-width) / 2));

    border-radius: 40px;
    padding: 2em;
}

body.dark-mode .container {
    background-color: var(--darkMode);
}

body.light-mode .container {
    background-color: var(--lightMode);
}

.equation {
    font-weight: 400;
}

.result {
    font-weight: 500;
}

body.dark-mode .equation {
    color: var(--darkGrey);
}

body.light-mode .equation {
    color: var(--lightGrey);
}

body.dark-mode .result {
    color: var(--lightGrey);
}

body.light-mode .result {
    color: var(--darkGrey);
}

.display {
    text-align: end;
    overflow: hidden;
    /* height: 268px; */
    height: 100%;
    width: 100%;
    gap: 10px;

    display: grid;
    grid-template-rows: auto min-content;
    align-items: flex-end;

    /* overflow: hidden; */
    white-space: nowrap;
    text-overflow: ellipsis;
    justify-items: end;
}

.history-item .result,
.history-item .equation,
.output .result,
.output .equation {
    overflow-x: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.history {
    display: grid;
    grid-template-rows: auto auto auto;
    width: 80%;
    justify-content: end;
}

.history-item {
    font-size: 1rem;
    overflow: hidden;
}

.output .equation {
    font-size: 1.5rem;
}

.output .result {
    font-size: 3rem;
}

.output {
    height: 100%;
    display: grid;
    grid-template-rows: auto auto;
    justify-content: end;
}

.container {
    display: grid;
    grid-template-rows: 0 auto max-content;
    align-items: flex-end;
    justify-items: end;
}

.keypad {
    display: grid;
    grid-template-rows: repeat(6, auto);
    gap: 20px;
    justify-content: center;
    align-items: flex-end;
    margin: 20px auto 0 auto;
}

.row {
    display: grid;
    grid-template-columns: repeat(4, auto);
    gap: 20px;
}

.key {
    width: 60px;
    height: 60px;
    border-radius: 20px;

    font-size: 2rem;
    font-weight: 500;

    color: var(--lightGrey);
    background-color: var(--darkGrey);
    text-align: center;
    line-height: 60px;

    cursor: pointer;
    transition: all .1s ease;
}

.key:active,
.key-press {
    transform: scale(1.1);
    border: 1px solid var(--orange);
    box-shadow: 0 0 1rem var(--orange);
}

.row:nth-child(-n+2) .key:nth-child(-n+3) {
    background-color: var(--lightGrey);
    color: var(--black);
}

.key:last-child {
    color: var(--white);
    background-color: var(--orange);
}

body.dark-mode .mode-button .button-knob {
    left: 35px;
    background-color: var(--darkMode);
    color: var(--lightMode);
}

.mode-button {
    background: 0;
    border: 0;
    cursor: pointer;
    position: absolute;
    top: 2em;
    left: 2em;
}

.mode-button .button-rail {
    position: absolute;
    top: 0;
    left: 0;
    width: 70px;
    height: 40px;
    border-radius: 20px;
    background-color: var(--orange);
    box-shadow: inset 1px 1px 3px 0 rgb(0 0 0 / 40%);
    transition: .3s;
}

.mode-button .button-knob {
    position: absolute;
    top: 5px;
    left: 5px;
    width: 30px;
    height: 30px;
    background-color: var(--lightMode);
    border-radius: 50%;
    box-shadow: 1px 1px 2px 0 rgb(0 0 0 / 40%);
    transition: .3s;
    line-height: 30px;
    color: var(--darkGrey);
}

/* Border Effect */
@property --rotate {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}

.container:hover {
    outline: 7px solid var(--orangeAlt);
}

.container:hover:before,
.container:hover:after {
    animation: none;
    opacity: 0;
}

/* Outline */
.container::before {
    content: "";

    width: 104%;
    height: 102%;

    position: absolute;
    top: -1%;
    left: -2%;
    z-index: -1;

    background-image: linear-gradient(var(--rotate), var(--orange), var(--lightGrey));
    border-radius: 48px;

    animation: spin 3s linear infinite;
}

/* Background Shadow */
.container::after {
    content: "";

    width: 150%;
    height: 150%;

    position: absolute;
    top: -25%;
    left: -25%;
    z-index: -2;

    background-image: linear-gradient(var(--rotate), var(--orange), var(--lightGrey));
    filter: blur(100px);
    opacity: 1;

    transition: opacity 1s;
    animation: spin 3s linear reverse infinite;
    animation-delay: 1.5s;
}

@keyframes spin {
    0% {
        --rotate: 0deg;
    }

    100% {
        --rotate: 360deg;
    }
}

footer {
    position: absolute;
    bottom: 10px;
    display: flex;
    gap: 10px;
    height: 2em;
    align-items: center;
    justify-content: center;
    width: 100%;
}

.github-link {
    height: 2em;
}

#Github-logo {
    height: 2em;

}

#Github-logo:hover {
    transform: scale(1.2);
    transition: 0.5s ease-in-out;
}

@media (max-height: 812px) {
    footer {
        display: none;
    }
}